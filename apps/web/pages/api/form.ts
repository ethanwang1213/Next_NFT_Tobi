import recaptcha from "@/methods/recaptcha/recaptcha";
import { GoogleSpreadsheet } from "google-spreadsheet";
import { NextApiRequest, NextApiResponse } from "next";

// Initialize the sheet - doc ID is the long id in the sheets URL
const doc = new GoogleSpreadsheet(process.env.SHEET_IDP);

// Initialize Auth - see https://theoephraim.github.io/node-google-spreadsheet/#/getting-started/authentication
(async () => {
  await doc.useServiceAccountAuth({
    // env var values are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    client_email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL!,
    private_key: process.env.GOOGLE_PRIVATE_KEY!.replace(/\\n/g, '\n'),
  });
})();

const Form = async (req: NextApiRequest, res: NextApiResponse) => {
  if (req.method !== "POST") {
    res.status(405).end();
    return;
  }

  if (!(await recaptcha(req.query.token as string, res))) {
    return;
  }

  // Load the document
  await doc.loadInfo();
  // Get the sheet
  const sheet = doc.sheetsByIndex[0];
  // Add the row
  await sheet.addRow(req.body);
  res.status(200).json({ message: "Success" });
};

export default Form;
